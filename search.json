[{"path":"https://fndemarqui.github.io/bellreg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 bellreg authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fndemarqui.github.io/bellreg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fabio Demarqui. Author, maintainer, copyright holder. Marcos Prates. Contributor. Fredy Caceres. Contributor. Andrew Johnson. Contributor.","code":""},{"path":"https://fndemarqui.github.io/bellreg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Demarqui F (2024). bellreg: Count Regression Models Based Bell Distribution. R package version 0.0.2, https://fndemarqui.github.io/bellreg/, https://github.com/fndemarqui/bellreg.","code":"@Manual{,   title = {bellreg: Count Regression Models Based on the Bell Distribution},   author = {Fabio Demarqui},   year = {2024},   note = {R package version 0.0.2, https://fndemarqui.github.io/bellreg/},   url = {https://github.com/fndemarqui/bellreg}, }"},{"path":"https://fndemarqui.github.io/bellreg/index.html","id":"bellreg","dir":"","previous_headings":"","what":"Count Regression Models Based on the Bell Distribution","title":"Count Regression Models Based on the Bell Distribution","text":"goal bellreg provide set functions fit regression models count data overdispersion using Bell distribution. implemented models account ordinary zero-inflated regression models frequentist Bayesian approaches. Theoretical details regarding models implemented package can found Castellares et al. (2018) doi:10.1016/j.apm.2017.12.014 Lemonte et al. (2020) doi:10.1080/02664763.2019.1636940.","code":""},{"path":"https://fndemarqui.github.io/bellreg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Count Regression Models Based on the Bell Distribution","text":"can install development version bellreg GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"fndemarqui/bellreg\")"},{"path":"https://fndemarqui.github.io/bellreg/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Count Regression Models Based on the Bell Distribution","text":"","code":"library(bellreg)  data(faults)  # ML approach: mle <- bellreg(nf ~ lroll, data = faults, approach = \"mle\") summary(mle) #> Call: #> bellreg(formula = nf ~ lroll, data = faults, approach = \"mle\") #>  #> Coefficients: #>               Estimate     StdErr z.value   p.value     #> (Intercept) 0.98524063 0.33219476  2.9659  0.003018 **  #> lroll       0.00190934 0.00049003  3.8963 9.766e-05 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> logLik = -88.96139   AIC = 181.9228  # Bayesian approach: bayes <- bellreg(nf ~ lroll, data = faults, approach = \"bayes\") #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 0.000242 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 2.42 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 2.927 seconds (Warm-up) #> Chain 1:                2.618 seconds (Sampling) #> Chain 1:                5.545 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 0.000201 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 2.01 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 2.467 seconds (Warm-up) #> Chain 2:                2.7 seconds (Sampling) #> Chain 2:                5.167 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 0.000344 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 3.44 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 2.492 seconds (Warm-up) #> Chain 3:                2.63 seconds (Sampling) #> Chain 3:                5.122 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 0.000293 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 2.93 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 2.476 seconds (Warm-up) #> Chain 4:                2.279 seconds (Sampling) #> Chain 4:                4.755 seconds (Total) #> Chain 4: summary(bayes) #>  #> bellreg(formula = nf ~ lroll, data = faults, approach = \"bayes\") #>  #>              mean se_mean    sd  2.5%   25%   50%   75% 97.5%    n_eff  Rhat #> (Intercept) 0.969   0.007 0.332 0.296 0.746 0.974 1.199 1.613 2607.463 1.001 #> lroll       0.002   0.000 0.000 0.001 0.002 0.002 0.002 0.003 2909.071 1.000 #>  #> Inference for Stan model: bellreg. #> 4 chains, each with iter=2000; warmup=1000; thin=1;  #> post-warmup draws per chain=1000, total post-warmup draws=4000."},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike information criterion — AIC.bellreg","title":"Akaike information criterion — AIC.bellreg","text":"Akaike information criterion","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike information criterion — AIC.bellreg","text":"","code":"# S3 method for bellreg AIC(object, ..., k = 2)"},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike information criterion — AIC.bellreg","text":"object object class bellreg. ... arguments passed methods. k numeric, penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike information criterion — AIC.bellreg","text":"Akaike information criterion value single model passed function; otherwise, data.frame Akaike information criterion values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike information criterion — AIC.bellreg","text":"","code":"# \\donttest{ library(bellreg) data(faults) fit1 <- bellreg(nf ~ 1, data = faults, approach = \"mle\") fit2 <- bellreg(nf ~ lroll, data = faults, approach = \"mle\") AIC(fit1, fit2) #>    fit      aic npars #> 1 fit2 181.9228     2 #> 2 fit1 195.5679     1 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Akaike information criterion for zibellreg objects — AIC.zibellreg","title":"Akaike information criterion for zibellreg objects — AIC.zibellreg","text":"Akaike information criterion zibellreg objects","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Akaike information criterion for zibellreg objects — AIC.zibellreg","text":"","code":"# S3 method for zibellreg AIC(object, ..., k = 2)"},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Akaike information criterion for zibellreg objects — AIC.zibellreg","text":"object object class zibellreg. ... arguments passed methods. k numeric, penalty per parameter used; default k = 2 classical AIC.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Akaike information criterion for zibellreg objects — AIC.zibellreg","text":"Akaike information criterion value single model passed function; otherwise, data.frame Akaike information criterion values number parameters returned.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/AIC.zibellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Akaike information criterion for zibellreg objects — AIC.zibellreg","text":"","code":"# \\donttest{ library(bellreg) data(cells) fit1 <- zibellreg(cells ~ 1|1, data = cells, approach = \"mle\") fit2 <- zibellreg(cells ~ 1|smoker+gender, data = cells, approach = \"mle\") fit3 <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = \"mle\") AIC(fit1, fit2, fit3) #>    fit      aic npars #> 1 fit3 1232.647     6 #> 2 fit2 1252.889     4 #> 3 fit1 1311.304     2 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/Bell.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","title":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","text":"Probability function, distribution function, quantile function random generation Bell distribution parameter theta.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/Bell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","text":"","code":"dbell(x, theta, log = FALSE)  pbell(q, theta, lower.tail = TRUE, log.p = FALSE)  qbell(p, theta, log.p = FALSE)  rbell(n, theta)"},{"path":"https://fndemarqui.github.io/bellreg/reference/Bell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","text":"x vector (non-negative integer) quantiles. theta parameter Bell distribution (theta > 0). log, log.p logical; TRUE, probabilities p given log(p). q vector quantiles. lower.tail logical; TRUE (default), probabilities \\(P[X \\le x]\\); otherwise, \\(P[X > x]\\). p vector probabilities. n number random values return.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/Bell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","text":"dbell gives (log) probability function, pbell gives (log) distribution function, qbell gives quantile function, rbell generates random deviates.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/Bell.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability function, distribution function, quantile function and random generation for the Bell distribution with parameter theta. — Bell","text":"Probability mass function $$ f(x) = \\frac{\\theta^{x} e^{1-e^{\\theta}}B_x}{x!}, $$ \\(B_x\\) Bell number, x = 0, 1, ....","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The 'bellreg' package. — bellreg-package","title":"The 'bellreg' package. — bellreg-package","text":"Bell Regression models count data overdispersion. implemented models account ordinary zero-inflated regression models frequentist Bayesian approaches. Theorical details regarding models implemented package can found (Castellares et al. 2018)  (Lemonte et al. 2020) _PACKAGE","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The 'bellreg' package. — bellreg-package","text":"Stan Development Team (2020). RStan: R interface Stan. R package version 2.19.3. https://mc-stan.org Castellares F, Ferrari SL, Lemonte AJ (2018). “Bell distribution associated regression model count data.” Applied Mathematical Modelling, 56, 172 - 185. doi:10.1016/j.apm.2017.12.014 . Lemonte AJ, Moreno-Arenas G, Castellares F (2020). “Zero-inflated Bell regression models count data.” Journal Applied Statistics, 47(2), 265-286. doi:10.1080/02664763.2019.1636940 .","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Bell regression model — bellreg","title":"Bell regression model — bellreg","text":"Fits Bell regression model overdispersed count data.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bell regression model — bellreg","text":"","code":"bellreg(   formula,   data = NULL,   approach = c(\"mle\", \"bayes\"),   hessian = TRUE,   link = c(\"log\", \"sqrt\", \"identity\"),   hyperpars = list(mu_beta = 0, sigma_beta = 10),   ... )"},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bell regression model — bellreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment ypbp called. approach approach used fit model (mle: maximum likelihood; bayes: Bayesian approach). hessian hessian logical; TRUE (default), hessian matrix returned approach=\"mle\". link assumed link function (log, sqrt identiy); default log. hyperpars list containing hyperparameters associated prior distribution regression coefficients; specified default choice hyperpars = c(mu_beta = 0, sigma_beta = 10). ... arguments passed either rstan::optimizing rstan::sampling.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bell regression model — bellreg","text":"bellreg returns object class \"bellreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bell regression model — bellreg","text":"","code":"# \\donttest{ data(faults) # ML approach: mle <- bellreg(nf ~ lroll, data = faults, approach = \"mle\") summary(mle) #> Call: #> bellreg(formula = nf ~ lroll, data = faults, approach = \"mle\") #>  #> Coefficients: #>               Estimate     StdErr z.value   p.value     #> (Intercept) 0.98521481 0.33219607  2.9658  0.003019 **  #> lroll       0.00190937 0.00049004  3.8964 9.764e-05 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> logLik = -88.96139   AIC = 181.9228   # Bayesian approach: bayes <- bellreg(nf ~ lroll, data = faults, approach = \"bayes\", refresh = FALSE) summary(bayes) #>  #> bellreg(formula = nf ~ lroll, data = faults, approach = \"bayes\",  #>     refresh = FALSE) #>  #>              mean se_mean    sd  2.5%   25%   50%   75% 97.5%    n_eff  Rhat #> (Intercept) 0.968   0.007 0.334 0.291 0.749 0.970 1.199 1.610 2148.964 1.001 #> lroll       0.002   0.000 0.000 0.001 0.002 0.002 0.002 0.003 2512.915 1.001 #>  #> Inference for Stan model: bellreg. #> 4 chains, each with iter=2000; warmup=1000; thin=1;  #> post-warmup draws per chain=1000, total post-warmup draws=4000. #>  # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Cells data set — cells","title":"Cells data set — cells","text":"Data set taken (Crawley 2012)  posteriorly analyzed (Lemonte et al. 2020) . data includes count infected blood cells per square millimetre microscope slides prepared n = 511 randomly selected individuals.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/cells.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cells data set — cells","text":"data frame 511 rows 5 variables: cells: count infected blood cells per square millimetre microscope slides smoker: smoking status subject (0: smoker; 1: non smoker) gender: subject's gender (1: male; 0: female). age: subject's age categorized three levels: young (\\( \\le 20\\)), mid (21 59), old (\\(\\ge 60\\)). weight: body mass score categorized three levels: normal, overweight, obese.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/cells.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cells data set — cells","text":"Crawley MJ (2012). R Book, 2nd edition. Wiley Publishing. ISBN 0470973927. Lemonte AJ, Moreno-Arenas G, Castellares F (2020). “Zero-inflated Bell regression models count data.” Journal Applied Statistics, 47(2), 265-286. doi:10.1080/02664763.2019.1636940 .","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated regression coefficients for the bellreg model — coef.bellreg","title":"Estimated regression coefficients for the bellreg model — coef.bellreg","text":"Estimated regression coefficients bellreg model","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated regression coefficients for the bellreg model — coef.bellreg","text":"","code":"# S3 method for bellreg coef(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated regression coefficients for the bellreg model — coef.bellreg","text":"object object class bellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated regression coefficients for the bellreg model — coef.bellreg","text":"vector estimated regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated regression coefficients for the bellreg model — coef.bellreg","text":"","code":"# \\donttest{ data(faults) fit <- bellreg(nf ~ lroll, data=faults) coef(fit) #> (Intercept)       lroll  #> 0.985258092 0.001909311  # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated regression coefficients for zibellreg model — coef.zibellreg","title":"Estimated regression coefficients for zibellreg model — coef.zibellreg","text":"Estimated regression coefficients zibellreg model","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated regression coefficients for zibellreg model — coef.zibellreg","text":"","code":"# S3 method for zibellreg coef(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated regression coefficients for zibellreg model — coef.zibellreg","text":"object object class bellreg ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimated regression coefficients for zibellreg model — coef.zibellreg","text":"list containing estimated regression coefficients associated degenerated Bell count distributions, respectively.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/coef.zibellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimated regression coefficients for zibellreg model — coef.zibellreg","text":"","code":"# \\donttest{ data(cells) fit <- zibellreg(cells ~ smoker + gender|smoker + gender, data = cells) coef(fit) #> $`Degenerated dist.` #> (Intercept)      smoker      gender  #>  -1.9525693   2.1768210  -0.4953926  #>  #> $`Bell dist.` #> (Intercept)      smoker      gender  #>  0.71650482 -0.61160553  0.03643287  #>  # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the regression coefficients — confint.bellreg","title":"Confidence intervals for the regression coefficients — confint.bellreg","text":"Confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the regression coefficients — confint.bellreg","text":"","code":"# S3 method for bellreg confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the regression coefficients — confint.bellreg","text":"object object class bellreg parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the regression coefficients — confint.bellreg","text":"matrix (vector) columns giving lower upper confidence limits parameter. labelled (1-level)/2 1 - (1-level)/2 \\","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the regression coefficients — confint.bellreg","text":"","code":"# \\donttest{ data(faults) fit <- bellreg(nf ~ lroll, data = faults) confint(fit) #>                     2.5%       97.5% #> (Intercept) 0.3341648495 1.636342078 #> lroll       0.0009488821 0.002869781 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence intervals for the regression coefficients — confint.zibellreg","title":"Confidence intervals for the regression coefficients — confint.zibellreg","text":"Confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence intervals for the regression coefficients — confint.zibellreg","text":"","code":"# S3 method for zibellreg confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence intervals for the regression coefficients — confint.zibellreg","text":"object object class zibellreg parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level confidence level required ... arguments passed methods","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence intervals for the regression coefficients — confint.zibellreg","text":"100(1-alpha)% confidence intervals regression coefficients","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/confint.zibellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence intervals for the regression coefficients — confint.zibellreg","text":"","code":"# \\donttest{ data(cells) fit <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = \"mle\") confint(fit) #> Warning: longer object length is not a multiple of shorter object length #> Warning: longer object length is not a multiple of shorter object length #> $`Degenerated dist.` #>            2.5%      97.5% #> [1,] -3.6075687 -0.2963421 #> [2,]  0.5632606  3.7891203 #> [3,] -1.3201961  0.3284881 #>  #> $`Bell dist.` #>            2.5%      97.5% #> [1,]  0.3640928  1.0690843 #> [2,] -0.9711692 -0.2522548 #> [3,] -0.3115651  0.3841399 #>  # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/extract_log_lik.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","title":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","text":"function extracts pointwise log-likelihood bellreg model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/extract_log_lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","text":"","code":"extract_log_lik(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/extract_log_lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","text":"object object class bellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/extract_log_lik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","text":"matrix pointwise extracted log-likelihood associated bellreg model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/extract_log_lik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract pointwise log-likelihood from a Stan model for a bellreg model — extract_log_lik","text":"","code":"# \\donttest{ data(faults) fit <- bellreg(nf ~ lroll, data = faults, approach = \"bayes\") #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 1.7e-05 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0.17 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 1: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 1: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 1: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 1: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 1: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 1: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 1: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 1: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 1: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 1: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 1: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.059 seconds (Warm-up) #> Chain 1:                0.061 seconds (Sampling) #> Chain 1:                0.12 seconds (Total) #> Chain 1:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 2). #> Chain 2:  #> Chain 2: Gradient evaluation took 1.2e-05 seconds #> Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0.12 seconds. #> Chain 2: Adjust your expectations accordingly! #> Chain 2:  #> Chain 2:  #> Chain 2: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 2: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 2: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 2: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 2: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 2: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 2: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 2: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 2: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 2: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 2: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 2: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 2:  #> Chain 2:  Elapsed Time: 0.059 seconds (Warm-up) #> Chain 2:                0.058 seconds (Sampling) #> Chain 2:                0.117 seconds (Total) #> Chain 2:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 3). #> Chain 3:  #> Chain 3: Gradient evaluation took 1.3e-05 seconds #> Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0.13 seconds. #> Chain 3: Adjust your expectations accordingly! #> Chain 3:  #> Chain 3:  #> Chain 3: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 3: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 3: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 3: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 3: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 3: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 3: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 3: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 3: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 3: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 3: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 3: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 3:  #> Chain 3:  Elapsed Time: 0.058 seconds (Warm-up) #> Chain 3:                0.063 seconds (Sampling) #> Chain 3:                0.121 seconds (Total) #> Chain 3:  #>  #> SAMPLING FOR MODEL 'bellreg' NOW (CHAIN 4). #> Chain 4:  #> Chain 4: Gradient evaluation took 1.1e-05 seconds #> Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0.11 seconds. #> Chain 4: Adjust your expectations accordingly! #> Chain 4:  #> Chain 4:  #> Chain 4: Iteration:    1 / 2000 [  0%]  (Warmup) #> Chain 4: Iteration:  200 / 2000 [ 10%]  (Warmup) #> Chain 4: Iteration:  400 / 2000 [ 20%]  (Warmup) #> Chain 4: Iteration:  600 / 2000 [ 30%]  (Warmup) #> Chain 4: Iteration:  800 / 2000 [ 40%]  (Warmup) #> Chain 4: Iteration: 1000 / 2000 [ 50%]  (Warmup) #> Chain 4: Iteration: 1001 / 2000 [ 50%]  (Sampling) #> Chain 4: Iteration: 1200 / 2000 [ 60%]  (Sampling) #> Chain 4: Iteration: 1400 / 2000 [ 70%]  (Sampling) #> Chain 4: Iteration: 1600 / 2000 [ 80%]  (Sampling) #> Chain 4: Iteration: 1800 / 2000 [ 90%]  (Sampling) #> Chain 4: Iteration: 2000 / 2000 [100%]  (Sampling) #> Chain 4:  #> Chain 4:  Elapsed Time: 0.06 seconds (Warm-up) #> Chain 4:                0.054 seconds (Sampling) #> Chain 4:                0.114 seconds (Total) #> Chain 4:  loglik <- extract_log_lik(fit)  data(cells) fit <- zibellreg(cells ~ 1|smoker+gender, data = cells, approach = \"bayes\", chains = 1, iter = 100) #>  #> SAMPLING FOR MODEL 'zibellreg' NOW (CHAIN 1). #> Chain 1:  #> Chain 1: Gradient evaluation took 0.000415 seconds #> Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 4.15 seconds. #> Chain 1: Adjust your expectations accordingly! #> Chain 1:  #> Chain 1:  #> Chain 1: WARNING: There aren't enough warmup iterations to fit the #> Chain 1:          three stages of adaptation as currently configured. #> Chain 1:          Reducing each adaptation stage to 15%/75%/10% of #> Chain 1:          the given number of warmup iterations: #> Chain 1:            init_buffer = 7 #> Chain 1:            adapt_window = 38 #> Chain 1:            term_buffer = 5 #> Chain 1:  #> Chain 1: Iteration:  1 / 100 [  1%]  (Warmup) #> Chain 1: Iteration: 10 / 100 [ 10%]  (Warmup) #> Chain 1: Iteration: 20 / 100 [ 20%]  (Warmup) #> Chain 1: Iteration: 30 / 100 [ 30%]  (Warmup) #> Chain 1: Iteration: 40 / 100 [ 40%]  (Warmup) #> Chain 1: Iteration: 50 / 100 [ 50%]  (Warmup) #> Chain 1: Iteration: 51 / 100 [ 51%]  (Sampling) #> Chain 1: Iteration: 60 / 100 [ 60%]  (Sampling) #> Chain 1: Iteration: 70 / 100 [ 70%]  (Sampling) #> Chain 1: Iteration: 80 / 100 [ 80%]  (Sampling) #> Chain 1: Iteration: 90 / 100 [ 90%]  (Sampling) #> Chain 1: Iteration: 100 / 100 [100%]  (Sampling) #> Chain 1:  #> Chain 1:  Elapsed Time: 0.476 seconds (Warm-up) #> Chain 1:                0.207 seconds (Sampling) #> Chain 1:                0.683 seconds (Total) #> Chain 1:  #> Warning: The largest R-hat is 1.09, indicating chains have not mixed. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#r-hat #> Warning: Bulk Effective Samples Size (ESS) is too low, indicating posterior means and medians may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#bulk-ess #> Warning: Tail Effective Samples Size (ESS) is too low, indicating posterior variances and tail quantiles may be unreliable. #> Running the chains for more iterations may help. See #> https://mc-stan.org/misc/warnings.html#tail-ess loglik <- extract_log_lik(fit)  # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/faults.html","id":null,"dir":"Reference","previous_headings":"","what":"Faults data set — faults","title":"Faults data set — faults","text":"Data set taken ( )  posteriorly analyzed (Castellares et al. 2018) . data contains number faults rolls fabric different lengths.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/faults.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Faults data set — faults","text":"data frame 32 rows 2 variables: nf: number faults rolls fabric different lengths. lroll: length roll.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/faults.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Faults data set — faults","text":"Castellares F, Ferrari SL, Lemonte AJ (2018). “Bell distribution associated regression model count data.” Applied Mathematical Modelling, 56, 172 - 185. doi:10.1016/j.apm.2017.12.014 . Hind J (ed.) (1982). Compound Poisson Regression Models, volume 14 Lecture Notes Statistics. ISBN 978-0-387-90777-2, doi:10.1007/978-1-4612-5771-4_11 .","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/fitted.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Fitted Values — fitted.bellreg","title":"Extract Model Fitted Values — fitted.bellreg","text":"function returns fitted values.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/fitted.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Fitted Values — fitted.bellreg","text":"","code":"# S3 method for bellreg fitted(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/fitted.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Fitted Values — fitted.bellreg","text":"object object class bellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/fitted.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Fitted Values — fitted.bellreg","text":"vector fitted values (MLE approach) matrix containing posterior sample fitted values.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/fitted.bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model Fitted Values — fitted.bellreg","text":"","code":"# \\donttest{ data(faults) fit <- bellreg(nf ~ lroll, data = faults) fitted.values(fit) #>  [1]  7.669884  9.283491 13.115990  5.480815 10.490151 14.049252  4.493717 #>  [8]  8.918618  6.839672  5.449510  9.177745  6.216902 14.792524  6.422008 #> [15]  9.125324  6.852744  7.553617 13.368828 15.077681  7.539209  7.256735 #> [22]  3.381046  9.390456  3.705561 10.961094  5.439115 10.898488 11.193745 #> [29]  6.892110 10.510200 16.493322  5.938443 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary.bellreg output — print.summary.bellreg","title":"Print the summary.bellreg output — print.summary.bellreg","text":"Print summary.bellreg output","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary.bellreg output — print.summary.bellreg","text":"","code":"# S3 method for summary.bellreg print(x, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary.bellreg output — print.summary.bellreg","text":"x object class summary.bellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary.bellreg output — print.summary.bellreg","text":"summary fitted model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the summary.zibellreg output — print.summary.zibellreg","title":"Print the summary.zibellreg output — print.summary.zibellreg","text":"Print summary.zibellreg output","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the summary.zibellreg output — print.summary.zibellreg","text":"","code":"# S3 method for summary.zibellreg print(x, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the summary.zibellreg output — print.summary.zibellreg","text":"x object class summary.zibellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/print.summary.zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the summary.zibellreg output — print.summary.zibellreg","text":"summary fitted model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for the bellreg model — summary.bellreg","title":"Summary for the bellreg model — summary.bellreg","text":"Summary bellreg model","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for the bellreg model — summary.bellreg","text":"","code":"# S3 method for bellreg summary(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for the bellreg model — summary.bellreg","text":"object objecto class 'bellreg'. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for the zibellreg model — summary.zibellreg","title":"Summary for the zibellreg model — summary.zibellreg","text":"Summary zibellreg model","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for the zibellreg model — summary.zibellreg","text":"","code":"# S3 method for zibellreg summary(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/summary.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for the zibellreg model — summary.zibellreg","text":"object objecto class 'zibellreg'. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.bellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix for a bellreg model — vcov.bellreg","title":"Variance-covariance matrix for a bellreg model — vcov.bellreg","text":"function extracts returns variance-covariance matrix associated regression coefficients maximum likelihood estimation approach used model fitting.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.bellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix for a bellreg model — vcov.bellreg","text":"","code":"# S3 method for bellreg vcov(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.bellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix for a bellreg model — vcov.bellreg","text":"object object class bellreg. ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.bellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix for a bellreg model — vcov.bellreg","text":"variance-covariance matrix associated regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.bellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance-covariance matrix for a bellreg model — vcov.bellreg","text":"","code":"# \\donttest{ data(faults) fit <- bellreg(nf ~ lroll, data = faults) vcov(fit) #>               (Intercept)         lroll #> (Intercept)  0.1103534074 -1.556128e-04 #> lroll       -0.0001556128  2.401347e-07 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Covariance of the regression coefficients — vcov.zibellreg","title":"Covariance of the regression coefficients — vcov.zibellreg","text":"Covariance regression coefficients","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Covariance of the regression coefficients — vcov.zibellreg","text":"","code":"# S3 method for zibellreg vcov(object, ...)"},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Covariance of the regression coefficients — vcov.zibellreg","text":"object object class bellreg ... arguments passed methods.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Covariance of the regression coefficients — vcov.zibellreg","text":"variance-covariance matrix associated regression coefficients.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/vcov.zibellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Covariance of the regression coefficients — vcov.zibellreg","text":"","code":"# \\donttest{ data(cells) fit <- zibellreg(cells ~ smoker + gender|smoker + gender, data = cells) vcov(fit) #>             (Intercept)      smoker      gender (Intercept)      smoker #> (Intercept)  0.71417169 -0.66636367 -0.16289337  0.08677698 -0.06936741 #> smoker      -0.66636367  0.67781740  0.11223576 -0.07508756  0.07902340 #> gender      -0.16289337  0.11223576  0.17685062 -0.03593005  0.02388374 #> (Intercept)  0.08677698 -0.07508756 -0.03593005  0.03234662 -0.02221532 #> smoker      -0.06936741  0.07902340  0.02388374 -0.02221532  0.03363487 #> gender      -0.05316979  0.03931535  0.04232791 -0.02585918  0.01346448 #>                  gender #> (Intercept) -0.05316979 #> smoker       0.03931535 #> gender       0.04232791 #> (Intercept) -0.02585918 #> smoker       0.01346448 #> gender       0.03149561 # }"},{"path":"https://fndemarqui.github.io/bellreg/reference/zibellreg.html","id":null,"dir":"Reference","previous_headings":"","what":"ZiBell regression model — zibellreg","title":"ZiBell regression model — zibellreg","text":"Fits Bell regression model overdispersed count data.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/zibellreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ZiBell regression model — zibellreg","text":"","code":"zibellreg(   formula,   data,   approach = c(\"mle\", \"bayes\"),   hessian = TRUE,   link1 = c(\"logit\", \"probit\", \"cloglog\", \"cauchy\"),   link2 = c(\"log\", \"sqrt\", \"identity\"),   hyperpars = list(mu_psi = 0, sigma_psi = 10, mu_beta = 0, sigma_beta = 10),   ... )"},{"path":"https://fndemarqui.github.io/bellreg/reference/zibellreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ZiBell regression model — zibellreg","text":"formula object class \"formula\" (one can coerced class): symbolic description model fitted. data optional data frame, list environment (object coercible .data.frame data frame) containing variables model. found data, variables taken environment(formula), typically environment ypbp called. approach approach used fit model (mle: maximum likelihood; bayes: Bayesian approach). hessian hessian logical; TRUE (default), hessian matrix returned approach=\"mle\". link1 assumed link function degenerate distribution (logit, probit, cloglog, cauchy); default logit. link2 assumed link function count distribution (log, sqrt identiy); default log. hyperpars list containing hyperparameters associated prior distribution regression coefficients; specified default choice hyperpars = c(mu_psi = 0, sigma_psi = 10, mu_beta = 0, sigma_beta = 10). ... arguments passed either rstan::optimizing rstan::sampling.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/zibellreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ZiBell regression model — zibellreg","text":"zibellreg returns object class \"zibellreg\" containing fitted model.","code":""},{"path":"https://fndemarqui.github.io/bellreg/reference/zibellreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ZiBell regression model — zibellreg","text":"","code":"# \\donttest{ # ML approach: data(cells) mle <- zibellreg(cells ~ smoker+gender|smoker+gender, data = cells, approach = \"mle\") summary(mle) #> Call: #> zibellreg(formula = cells ~ smoker + gender | smoker + gender,  #>     data = cells, approach = \"mle\") #>  #> Zero-inflated regression coefficients: #>             Estimate   StdErr z.value  p.value    #> (Intercept) -1.95235  0.84515 -2.3101 0.020884 *  #> smoker       2.17659  0.82335  2.6436 0.008204 ** #> gender      -0.49586  0.42061 -1.1789 0.238437    #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #>  #> Count regression coefficients: #>              Estimate    StdErr z.value   p.value     #> (Intercept)  0.716604  0.179862  3.9842 6.771e-05 *** #> smoker      -0.611721  0.183410 -3.3353 0.0008522 *** #> gender       0.036252  0.177480  0.2043 0.8381522     #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> ---  #> logLik = -610.3234   AIC = 1232.647   # Bayesian approach: bayes <- zibellreg(cells ~ 1|smoker+gender, data = cells, approach = \"bayes\", refresh = FALSE) summary(bayes) #> Call: #> zibellreg(formula = cells ~ 1 | smoker + gender, data = cells,  #>     approach = \"bayes\", refresh = FALSE) #>  #> Zero-inflated regression coefficients: #>               mean se_mean    sd   2.5%    25%    50%    75%  97.5%    n_eff #> (Intercept) -1.157   0.008 0.331 -1.912 -1.347 -1.118 -0.924 -0.622 1921.857 #>              Rhat #> (Intercept) 1.001 #>  #> Count regression coefficients: #>               mean se_mean    sd   2.5%    25%    50%    75%  97.5%    n_eff #> (Intercept)  0.715   0.003 0.148  0.425  0.615  0.718  0.815  1.007 3060.816 #> smoker      -1.074   0.003 0.144 -1.362 -1.170 -1.073 -0.980 -0.793 2557.185 #> gender       0.177   0.002 0.142 -0.109  0.082  0.177  0.272  0.450 3361.845 #>              Rhat #> (Intercept) 1.001 #> smoker      1.002 #> gender      1.001 #> ---  #> Inference for Stan model: zibellreg. #> 4 chains, each with iter=2000; warmup=1000; thin=1;  #> post-warmup draws per chain=1000, total post-warmup draws=4000. #>  # }"},{"path":"https://fndemarqui.github.io/bellreg/news/index.html","id":"bellreg-012","dir":"Changelog","previous_headings":"","what":"bellreg 0.1.2","title":"bellreg 0.1.2","text":"bellreg package now requires rstan version 2.26. Implementation extract_log_lik method bellreg zibellreg objects. Implementation new link functions (log, sqrt identity count distribution logit, probit, cloglog cauchy degenerated distribution). Implementation AIC method bellreg zibellreg objects.","code":""}]
